---
title: Configuring BOSH Director on AWS Using Terraform
owner: Ops Manager
iaas: AWS
install_type: terraform
---

<div class="note warning"><strong>Warning:</strong>
	<p style="display: inline">
		The Terraform templates described in this topic are not supported and are not recommended for use.
	</p>
	<p>
		Advanced users can install <%= vars.ops_manager %> with Terraform using <a href="https://github.com/pivotal/paving">paving</a> in GitHub. You may need to modify the configuration of the Terraform templates in this repository based on your unique platform needs.
	</p>
</div>

This topic describes how to configure the BOSH Director tile in <%= vars.ops_manager %> on
Amazon Web Services (AWS) after [Deploying <%= vars.ops_manager %> on AWS Using Terraform](./prepare-env-terraform.html).

<p class="note"><strong>Note:</strong> You can also perform the procedures in this topic using the <%= vars.ops_manager %> API. For more information, see <a href="../install/ops-man-api.html">Using the <%= vars.ops_manager %> API</a>.</p>


## <a id='prereq'></a> Prerequisites

To complete the procedures in this topic, you must have access to the output from when you ran `terraform apply` to create resources for this deployment. You can view this output at any time by running `terraform output`. You use the values in your Terraform output to configure the BOSH Director tile.


## <a id='access-om'></a> Step 1: Log Into <%= vars.ops_manager %>

1. In a web browser, navigate to the fully qualified domain name (FQDN) of <%= vars.ops_manager %>. Use the `ops_manager_dns` value from running `terraform output`.

1. Log into <%= vars.ops_manager %>. To log in, see [Log In to <%= vars.ops_manager %> For the First Time](../login.html#login-first-time).

## <a id='aws-config'></a> Step 2: AWS Config Page

1. Click the **BOSH Director** tile.

1. Select **AWS Config** to open the **AWS Management Console Config** page.

    <%= image_tag("../common/images/cloudform/aws-config.png", :alt => "Screenshot of the 'AWS Management Console Config' pane, which has fields described below.") %>

1. Select **Use AWS Keys** or **Use AWS Instance Profile**.
    * If you choose to use AWS keys, complete the following fields:
        * **Access Key ID**: Enter the value of `ops_manager_iam_user_access_key` from the Terraform output.
        * **AWS Secret Key**: Enter the value of `ops_manager_iam_user_secret_key` from the Terraform output.
    * If you choose to use an AWS instance profile, enter the name of your AWS Identity and Access Management (IAM) profile or enter the value of `ops_manager_iam_instance_profile_name` from the Terraform output.

1. Complete the remainder of the **AWS Management Console Config** page with the following information.
    * **Security Group ID**: Enter the value of `vms_security_group_id` from the Terraform output.
    * **Key Pair Name**: Enter the value of `ops_manager_ssh_public_key_name` from the Terraform output.
    * **SSH Private Key**: Run `terraform output` to view the value of `ops_manager_ssh_private_key`	and enter it into this field. `ops_manager_ssh_private_key` is a `sensitive` value and does not display when you run `terraform apply`.
    * **Region**: Input the AWS region where you deployed <%= vars.ops_manager %>.
    * **AWS EBS disk type**: Select the type of EBS volume for BOSH-deployed VMs to use.
    <p class="note warning"><strong>Warning:</strong> If you change this value, BOSH re-creates all VMs when you apply changes.</p>
    * **Encrypt Linux EBS Volumes**: Select this checkbox to enable full encryption
      on persistent disks of all BOSH-deployed VMs, except
      for the <%= vars.ops_manager %> VM and BOSH Director VM. For more information about using Elastic Block Store (EBS) encryption, see [Configuring Amazon EBS Encryption](../install/cloudform-om-ebs-config.html).
      <p class="note"><strong>Note:</strong> Enabling EBS encryption only encrypts Linux VMs. The Windows VMs deployed with <%= vars.windows_runtime_full %> (<%= vars.windows_runtime_abbr %>) are not encrypted.</p>
      * **Custom Encryption Key (Optional)** After you enable EBS encryption, you might want to specify a custom Key Management Service (KMS) encryption key. If you don't enter a value, your custom encryption key defaults to the account key. For more information, see [Configuring Amazon EBS Encryption](../install/cloudform-om-ebs-config.html).

1. Click **Save**.


## <a id='director-config'></a> Step 3: Director Config Page


<p class="note"><strong>Note:</strong> For more information about AWS S3 Signatures, see the AWS <a href="http://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html">Authenticating Requests</a> documentation.</p>


## <a id='az'></a> Step 4: Create Availability Zones Page

1. Select **Create Availability Zones**.
    <%= image_tag("../common/images/cloudform/create-az.png", :alt => "Screenshot of the 'Create Availability Zones' pane, which has fields described below.") %>

1. To create three Availability Zones for your apps to use, do the following:
    1. Click **Add** three times.
    1. For **Amazon Availability Zone**, enter the values corresponding to the key `infrastructure_subnet_availability_zones` from the Terraform output.
    1. Click **Save**.


## <a id='network'></a> Step 5: Create Networks Page

1. Select **Create Networks**.
<%= image_tag("../common/images/cloudform/create-networks.png", :alt => "Screenshot of 'Create Networks' page with fields, which are described below") %>

1. (Optional) Select **Enable ICMP checks** to enable ICMP on your networks. <%= vars.ops_manager %> uses ICMP checks to confirm that components within your network are reachable.

1. To add the network configuration you created for your VPC, do the following:
  1. Click **Add Network**.
  1. For **Name**, enter `infrastructure`.
  1. Create a subnet for each availability zone by clicking **Add Subnet**. Refer to the table below for the information required to create all three subnets:
    <table>
      <tr>
        <th rowspan="7">First<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The first value of <code>infrastructure_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.16.0/28</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.16.0-10.0.16.4</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.16.1</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The first value of <code>infrastructure_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
       <tr>
        <th rowspan="7">Second<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The second value of <code>infrastructure_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.16.16/28</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.16.16-10.0.16.20</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.16.17</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The second value of <code>infrastructure_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th rowspan="7">Third<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The third value of <code>infrastructure_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.16.32/28</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.16.32-10.0.16.36</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.16.33</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The third value of <code>infrastructure_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
    </table>
    \* If you set a VPC CIDR other than recommended, enter the second IP in your VPC CIDR. For example, for a `10.0.0.0/24` VPC CIDR, enter `10.0.0.2` in each subnet.
  <br><br>
  1. Click **Add Network**.
  1. For **Name**, enter the name of your runtime. For example, `pas` or `pks`.
  1. Create a subnet for each availability zone by clicking **Add Subnet**. Refer to the table below for the information required to create all three subnets:
    <table>
      <tr>
        <th rowspan="7">First<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The first value of <code>RUNTIME_subnet_ids</code> from the Terraform output, where <code>RUNTIME</code> is either <code>pas</code> or <code>pks</code>.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.4.0/24</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.4.0-10.0.4.4</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.4.1</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The first value of <code>RUNTIME_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
       <tr>
        <th rowspan="7">Second<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The second value of <code>RUNTIME_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.5.0/24</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.5.0-10.0.5.4</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.5.1</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The second value of <code>RUNTIME_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th rowspan="7">Third<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The third value of <code>RUNTIME_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.6.0/24</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.6.0-10.0.6.4</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.6.1</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The third value of <code>RUNTIME_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
    </table>
    \* If you set a VPC CIDR other than recommended, enter the second IP in your VPC CIDR. For example, for a `10.0.0.0/24` VPC CIDR, enter `10.0.0.2` in each subnet.
  <br><br>
  1. Click **Add Network**.
  1. For **Name**, enter `services`.
  1. Create a subnet for each availability zone by clicking **Add Subnet**. Refer to the table below for the information required to create all three subnets:
    <table>
      <tr>
        <th rowspan="7">First<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The first value of <code>services_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.8.0/24</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.8.0-10.0.8.3</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.8.1</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The first value of <code>services_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
       <tr>
        <th rowspan="7">Second<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The second value of <code>services_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.9.0/24</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.9.0-10.0.9.3</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.9.1</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The second value of <code>services_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th rowspan="7">Third<br>Subnet</th>
      </tr>
      <tr>
        <th>VPC Subnet ID</th>
        <td>The third value of <code>services_subnet_ids</code> from the Terraform output.</td>
      </tr>
      <tr>
        <th>CIDR</th>
        <td><code>10.0.10.0/24</code></td>
      </tr>
      <tr>
        <th>Reserved IP Ranges</th>
        <td><code>10.0.10.0-10.0.10.3</code></td>
      </tr>
      <tr>
        <th>DNS</th>
        <td><code>10.0.0.2</code>\*</td>
      </tr>
      <tr>
        <th>Gateway</th>
        <td><code>10.0.10.1</code></td>
      </tr>
      <tr>
        <th>Availability Zones</th>
        <td>The third value of <code>services_subnet_availability_zones</code> from the Terraform output.</td>
      </tr>
    </table>
    \* If you set a VPC CIDR other than recommended, enter the second IP in your VPC CIDR. For example, for a `10.0.0.0/24` VPC CIDR, enter `10.0.0.2` in each subnet.

1. Click **Save**.

    <p class="note"><strong>Note:</strong> If you are deploying <%= vars.k8s_runtime_abbr %> with a <%= vars.k8s_runtime_abbr %> workload load balancer, you must tag each AWS subnet with your <%= vars.k8s_runtime_abbr %> Kubernetes cluster unique identifier before you create the load balancer. For more information about tagging subnets with a <%= vars.k8s_runtime_abbr %> cluster unique identifier, see <a href="https://docs.pivotal.io/tkgi/deploy-workloads.html#aws">AWS Prerequisites</a>.</p>

    <%= vars.expand_network_azs %>


## <a id="assign-azs"></a> Step 6: Assign AZs and Networks Page

1. Select **Assign AZs and Networks**.
<%= image_tag("../common/images/assign-az.png", :alt => "Screenshot of 'Assign AZs and Networks' pane, which has fields described below.") %>

1. Use the dropdown to select a **Singleton Availability Zone**. The BOSH Director installs in this availability zone (AZ).

1. Use the dropdown to select the `infrastructure` network for your BOSH Director.

1. Click **Save**.


## <a id='security'></a> Step 7: Security Page

<%# This Security Pane partial is conditionalized between the
"Setting Trusted Certificates" topic (trusted-certificates.html)
and IaaS-specific Ops Manager configuration topics. %>
<% if current_page.data.title == "Setting Trusted Certificates" %>
1. Navigate to the BOSH Director tile from the <%= vars.ops_manager %> Installation Dashboard.
<% end %>

1. Select **Security**.
	<% if current_page.data.title == "Setting Trusted Certificates" %>
    <% else %>
    <%= image_tag("../common/images/om-security.png", :alt => "At the top of the image is the header 'Security' with a horizontal line underneath. Below the line is a text area labeled 'Trusted Certificates', below which is the text 'These certificates enable BOSH-deployed components to trust a custom root certificate.' Below this text is a checkbox labeled 'Include OpsManager Root CA in Trusted Certs', underneath which is the text 'Checking this box will place the OpsManager Root CA into the trusted certificate field. The Bosh Director will then place this CA into the trust store of every VM that it deploys.' Below this text is a checkbox labeled 'Clear the Default Trusted Certificates Store', underneath which is the text 'Deletes all the certificates in the system certificate trust store every time BOSH deploys a VM. Certificates added in the Trusted Certificates field will still be trusted and you should add the certificates required to access your IAAS Provider services.' Below this text are the words 'Generate VM passwords or use single password for all VMs', below which are two options: one selected radio button labeled 'Generate passwords', and one radio button labeled 'Use default BOSH password'. At the bottom of the image is a blue, rectangular button labeled 'Save'.") %>
    <% end %>

1. In **Trusted Certificates**, enter your custom certificate authority (CA) certificates to insert into your organization's certificate trust chain. This feature enables all BOSH-deployed components in your deployment to trust custom root certificates.
  <br><br>To enter multiple certificates, paste your certificates one after the other. For example, format your certificates like the example below:
  <pre>-----BEGIN CERTIFICATE-----
ABCDEFGH12345678ABCDEFGH12345678ABCDEFGH12345678AB
EFGH12345678ABCDEFGH12345678ABCDEFGH12345678ABCDEF
GH12345678ABCDEFGH12345678ABCDEFGH12345678...
------END CERTIFICATE------
-----BEGIN CERTIFICATE-----
BCDEFGH12345678ABCDEFGH12345678ABCDEFGH12345678ABB
EFGH12345678ABCDEFGH12345678ABCDEFGH12345678ABCDEF
GH12345678ABCDEFGH12345678ABCDEFGH12345678...
------END CERTIFICATE------
-----BEGIN CERTIFICATE-----
CDEFGH12345678ABCDEFGH12345678ABCDEFGH12345678ABBB
EFGH12345678ABCDEFGH12345678ABCDEFGH12345678ABCDEF
GH12345678ABCDEFGH12345678ABCDEFGH12345678...
------END CERTIFICATE------</pre>
  <p class="note"><strong>Note:</strong> If you want to use Docker registries to run <%= vars.app_runtime_abbr %> app instances in Docker containers, enter the certificate for your private Docker registry in this field. For more information about running app instances in <%= vars.app_runtime_abbr %> using Docker registries, see <a href="https://docs.pivotal.io/application-service/operating/docker-registry.html">Using Docker Registries</a>.</p>

1. To include the <%= vars.ops_manager %> root CA in the **Trusted Certificates** field, select the **Include OpsManager Root CA in Trusted Certs** checkbox. BOSH Director includes this CA in the trust store of every VM that it deploys.
  <p class="note warning"><strong>Warning:</strong> If you are using Ops Manager to generate certificates for either a load balancer or router, then you must select this checkbox.</p>

1. To clear the default trusted certificates from all BOSH-deployed Linux VMs, select the **Clear the Default Trusted Certificates Store** checkbox. You must provide your own trusted certificates when selecting this checkbox as all TLS communication fails without trusted certificates available.
  <p class="note"><strong>Note</strong>: This option is available in Ops Manager v2.10.21 and later.</p>

<% if current_page.data.title == "Setting Trusted Certificates" %>
1. Click **Save**.
<% else %>
1. Choose **Generate passwords** or **Use default BOSH password**. <%= vars.company_name %> recommends that you use the **Generate passwords** option for greater security.

1. Click **Save**. To view your saved BOSH Director password, click the **Credentials** tab.
<% end %>

## <a id="bosh-dns"></a> Step 8: BOSH DNS Config Page

The **BOSH DNS Config** pane allows you to configure DNS for BOSH Director by adding excluded recursors, a recursor timeout, and handlers.

The fields in the **BOSH DNS Config** pane are:

* **Excluded Recursors**: Exclude recursor addresses, which are URL redirects, so that they are not contacted by the BOSH DNS server. For more information about how the BOSH DNS release selects recursors, see [Recursors](https://bosh.io/docs/dns/#recursors) in _Native DNS Support in the BOSH documentation.

* **Recursor Timeout**: Specify a timeout for the BOSH DNS server to contact any connected recursor addresses. The time limit includes dialing, writing, and reading from the recursor. If any of these actions exceeds the time limit, the action fails.

* **Handlers**: Specify recursor addresses that apply to specific domains. For example, you can use handlers to forward all requests to a domain to a private DNS for resolution. For more information about using handlers, see [Additional Handlers](https://bosh.io/docs/dns/#additional-handlers) in _Native DNS Support in the BOSH documentation.

To add excluded recursors, a recursor timeout, or handlers to the BOSH DNS release:

1. Select **BOSH DNS Config**.
	<%= image_tag("../common/images/bosh-dns-config.png", :alt => "At the top of the image is the header 'BOSH DNS Config', underneath which is a horizontal line. Below the line are two text fields labeled, from top to bottom, 'Excluded Recursors' and 'Recursor Timeout'. Below these fields is a text area labeled 'Handlers', containing the text '[]'. To the right of this text area is the help text 'Enter a JSON-formatted list of optional custom domain handlers'. At the bottom of the image is a blue, rectangular button labeled 'Save'.") %>

1. (Optional) In **Excluded Recursors**, enter a list of prohibited recursor addresses.

1. (Optional) In **Recursor Timeout**, enter a time limit for contacting the connected recursors.
	<p class="note"><strong>Note:</strong> This time limit must include one of the Go parse duration time units. For example, entering <code>5s</code> sets the timeout limit to five seconds. For more information about supported time units, see <a href="https://golang.org/pkg/time/#ParseDuration">func ParseDuration</a> in the Go Programming Language documentation.</p></li>

1. (Optional) In **Handlers**, enter an array of custom domain handlers in JSON format. For example:

	```
	[
	  {
	    "cache": {
	      "enabled": true
	    },
	    "domain": "example.com",
	    "source": {
	      "type": "http",
	      "url": "http://example.endpoint.local"
	    }
	  }
	]
	```

1. Click **Save**.

## <a id='syslog'></a> Step 9: Syslog Page

1. Select **Syslog**.

	<% if vars.product_short == "Redis for Tanzu Application Service" || vars.product_short == "Redis for Pivotal Platform" %>
    ![The Syslog configuration page in the Redis for PCF tile in Ops Manager.
		See below for information about configuring this pane.](syslog-forwarding.png)
		<a href="./images/syslog-forwarding.png" target="_blank" aria-hidden="true">
			Click here to view a larger version of this image</a>
	<% end %>

1. (Optional) Select **Yes** to send <%= syslog_context %> system logs to a remote server.

1. Enter the IP address or DNS name for the remote server in **Address**.

1. Enter the port number that the remote server listens on in **Port**.

1. Select **TCP** or **UDP** from the **Transport Protocol** dropdown. This selection determines which transport protocol is used to send the logs to the remote server.

1. (Optional) Select the **Enable TLS** checkbox to send encrypted logs to remote server with TLS. After you select the checkbox:
	1. Enter either the name or SHA1 fingerprint of the remote peer in **Permitted Peer**.
	1. Enter the SSL certificate for the remote server in **SSL Certificate**.
	<p class="note"><strong>Note:</strong> <%= vars.company_name %> strongly recommends that you enable TLS encryption when you are forwarding logs. Logs can contain sensitive information, such as cloud provider credentials.</p>

1. (Optional) Enter an integer in **Queue Size**. This value specifies the number of log messages held in the buffer. The default value is 100,000.

1. (Optional) Select the checkbox to **Forward Debug Logs** to an external source. This option is deselected by default. If you select it, you may generate a large amount of log data.

1. (Optional) Enter configuration details for rsyslog in the **Custom rsyslog Configuration** field. This field requires the rainerscript syntax.

1. Click **Save**.

## <a id='pcfaws-om-rscestem'></a> Step 10: Resource Config Page

1. Select **Resource Config**.
    <%= image_tag("../common/images/cloudform/resource-config.png", :alt => "Screenshot of the 'Resource Config' pane, which has fields described below.") %>

1. Adjust any values as necessary for your deployment. Under the **Instances**, **VM Type**, and **Persistent Disk Type** fields, choose **Automatic** from the dropdown to allocate the recommended resources for the job. If the **Persistent Disk Type** field reads **None**, the job does not require persistent disk space.
    <p class="note"><strong>Note:</strong> For the BOSH Director job, select a VM type with at least 8&nbsp;GB memory.</p>
    <p class="note"><strong>Note:</strong> If you set a field to <strong>Automatic</strong> and the recommended resource allocation changes in a future version, <%= vars.ops_manager %> automatically uses the new recommended allocation.</p>
    <p class="note"><strong>Note:</strong> If you install <%= vars.windows_runtime_abbr %>, provision your <strong>Master Compilation Job</strong> with at least 100&nbsp;GB of disk space.</p>

1. (Optional) To configure an Application Load Balancer (ALB) for your BOSH Director, click the icon next to the **BOSH Director** job name to see more fields.
Enter your AWS target group name in the **Load Balancers** field for the **BOSH Director** job. Prepend the name with `alb:`. For example, enter `alb:target-group-name`.<br><br>
    To create an ALB and target group, follow the procedures in [Getting Started with Application Load Balancers](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancer-getting-started.html) in the AWS documentation. Then navigate to **Target Groups** in the **EC2 Dashboard** menu to find your target group **Name**.
    <div class="note">
      <p><strong>Note:</strong> To configure an ALB, you must have the following AWS IAM permissions.</p>
      <pre>"elasticloadbalancing:DescribeLoadBalancers",
"elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
"elasticloadbalancing:RegisterInstancesWithLoadBalancer",
"elasticloadbalancing:DescribeTargetGroups",
"elasticloadbalancing:RegisterTargets"</pre>
    </div>

1. Click **Save**.

## <a id="load-balancer-vm-extensions"></a> Step 11: Add VM Extensions for Load Balancers

You must assign each of your load balancer VMs to the correct AWS target groups and security groups. The following steps use the `om` CLI to configure both target groups and security groups. For more information, see [pivotalcf/om](https://github.com/pivotal-cf/om) in GitHub.

To assign your load balancer VMs to the correct target groups and security groups, do the following:

1. Run the following command to create a VM extension for the web VM:

    ```sh
    om -k create-vm-extension \
    --name "web-lb-security-groups" \
    --cloud-properties '{ "security_groups": ["web_lb_security_group", "vms_security_group"] }'
    ```

1. Run the following command to create a VM extension for the SSH VM:

    ```
    om -k create-vm-extension \
    --name "ssh-lb-security-groups" \
    --cloud-properties '{ "security_groups": ["ssh_lb_security_group", "vms_security_group"] }'
    ```


1. Run the following command to create a VM extension for the TCP VM:

    ```
    om -k create-vm-extension \
    --name "tcp-lb-security-groups" \
    --cloud-properties '{ "security_groups": ["tcp_lb_security_group", "vms_security_group"] }'
    ```

## <a id="custom-vm-extensions"></a> Step 12: (Optional) Add Custom VM Extensions

Use the <%= vars.ops_manager %> API to add custom properties to your VMs such as associated security groups and load balancers. For more information, see [Managing Custom VM Extensions](../install/custom-vm-extensions.html).

## <a id='complete'></a> Step 13: Complete the BOSH Director Installation

1. Click the **Installation Dashboard** link to return to the Installation Dashboard.

1. Click **Review Pending Changes**, then **Apply Changes**. If the following ICMP error message appears, click **Ignore errors and start the install**.

    <%= image_tag("../common/images/cloudform/install-error.png", :alt => "At the top of the image is the rectangular, dark green Ops Manager header, with a teal square containing a capital P on the far left, the words 'Pivotal Ops Manager' to the right of the square, and the words 'pivotal-cf' beside a downward-pointing carat on the far right. Below the header is an error message with a red background. To the left on the error message is a red triangle containing an exclamation point beside the words 'Please review the errors below'. Below 'Please review the errors below' is a bullet list with two items: 'Cannot reach gateway with IP 10.0.16.1 (ignorable if ICMP is disabled)' and 'Cannot reach DNS with IP 10.0.0.2 (ignorable if ICMP is disabled)'. To the right of this list are two buttons: a white, rectangular button labeled 'Ignore errors and start the install' in red letters on the left, and a red, rectangular button labeled 'Stop and fix errors' in white letters on the right.") %>

1. BOSH Director installs. This may take a few moments. When the installation process successfully completes, the **Changes Applied** window appears.

    <%= image_tag("../common/images/cloudform/ops-manager-complete.png", :alt => "A pop-up window with a round, gray X button in the upper-right corner and the words 'Changed Applied' next to a round, green circle containing a checkmark. Below 'Changed Applied' are the words 'Ops Manager Director was successfully installed. We recommend that you export a backup of this installation from the actions menu.' Below this text and to the right of the pop-up window are a gray, rectangular button labeled 'Close' next to a blue, rectangular button labeled 'Return to Installation Dashboard'.") %>

1. After you complete this procedure, continue to the topic for the runtime you are installing:
  * **<%= vars.app_runtime_abbr %>**: [Configuring <%= vars.app_runtime_abbr %>](https://docs.pivotal.io/application-service/operating/configure-pas.html)
  * **<%= vars.k8s_runtime_abbr %> v1.2**: [Installing <%= vars.k8s_runtime_abbr %> on AWS](https://docs.pivotal.io/pks/1-2/installing-pks-aws.html)
  * **<%= vars.k8s_runtime_abbr %> v1.3**: [Installing <%= vars.k8s_runtime_abbr %> on AWS](https://docs.pivotal.io/pks/1-3/installing-pks-aws.html)
